"""
ÎÑ§Ïù¥Î≤Ñ ÏÉÅÌíàÎ™Ö ÏÉùÏÑ±Í∏∞ UI - ÏûÖÎ†• Î∞è Ïª®Ìä∏Î°§ ÏúÑÏ†Ø
ÏûÖÎ†• ÏÑπÏÖòÎßå Í¥ÄÎ¶¨
"""
from typing import TypedDict
from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QHBoxLayout, QLabel, QLineEdit,
    QGroupBox, QGridLayout, QSizePolicy
)
from PySide6.QtCore import Qt, Signal
from PySide6.QtGui import QFontMetrics
from src.toolbox.ui_kit.modern_style import ModernStyle
from src.toolbox.ui_kit.components import ModernPrimaryButton, ModernCancelButton
from src.desktop.common_log import log_manager


class InputData(TypedDict):
    """ÏûÖÎ†• Îç∞Ïù¥ÌÑ∞ ÌÉÄÏûÖ Ï†ïÏùò"""
    brand: str
    keyword: str
    spec: str
    material: str
    size: str


class ProductTitleInputWidget(QWidget):
    """ÏÉÅÌíàÎ™Ö ÏÉùÏÑ±Í∏∞ ÏûÖÎ†• ÏúÑÏ†Ø"""
    
    # ÏãúÍ∑∏ÎÑê Ï†ïÏùò
    analyze_requested = Signal(dict)  # Î∂ÑÏÑù ÏöîÏ≤≠ ÏãúÍ∑∏ÎÑê (InputData Ï†ÑÎã¨)
    stop_requested = Signal()  # Î∂ÑÏÑù Ï§ëÎã® ÏöîÏ≤≠
    
    def __init__(self):
        super().__init__()
        self.setup_ui()
        self.setup_connections()
        
    def setup_ui(self):
        """UI Íµ¨ÏÑ±"""
        layout = QVBoxLayout()
        layout.setContentsMargins(0, 0, 0, 0)
        layout.setSpacing(15)
        
        # ÏûÖÎ†• ÏÑπÏÖòÎßå Ìè¨Ìï®
        self.input_group = self.create_input_section()
        layout.addWidget(self.input_group)
        
        self.setLayout(layout)
        
    def create_input_section(self):
        """ÏûÖÎ†• ÏÑπÏÖò - 5Í∞ú ÌïÑÎìúÎ•º 2x3 Í∑∏Î¶¨ÎìúÎ°ú Î∞∞Ïπò"""
        group = QGroupBox("üìù Í∏∞Î≥∏ Ï†ïÎ≥¥ ÏûÖÎ†•")
        
        # Ìè∞Ìä∏ Í∏∞Î∞ò ÏµúÏÜå ÎÜíÏù¥ Í≥ÑÏÇ∞
        fm = QFontMetrics(self.font())
        line_h = max(32, fm.height() + 14)
        
        # Î©îÏù∏ Î†àÏù¥ÏïÑÏõÉ
        main_layout = QVBoxLayout()
        main_layout.setContentsMargins(15, 20, 15, 15)
        main_layout.setSpacing(15)
        
        # ÏûÖÎ†• ÌïÑÎìú Í∑∏Î¶¨Îìú Î†àÏù¥ÏïÑÏõÉ (2Ïó¥ x 3Ìñâ)
        grid_layout = QGridLayout()
        grid_layout.setHorizontalSpacing(20)
        grid_layout.setVerticalSpacing(12)
        
        # ÏôºÏ™Ω Ïó¥
        # Î∏åÎûúÎìúÎ™Ö (0,0)
        brand_label = QLabel("Î∏åÎûúÎìúÎ™Ö (ÏÑ†ÌÉù):")
        self.brand_input = QLineEdit()
        self.brand_input.setPlaceholderText("Ïòà: ÏäàÌçºÏ∏Ñ")
        self.brand_input.setMinimumHeight(line_h)
        self.brand_input.setTextMargins(8, 4, 8, 4)
        grid_layout.addWidget(brand_label, 0, 0)
        grid_layout.addWidget(self.brand_input, 0, 1)
        
        # ÌïµÏã¨Ï†úÌíàÎ™Ö (1,0)
        keyword_label = QLabel("ÌïµÏã¨Ï†úÌíàÎ™Ö (ÌïÑÏàò):")
        self.keyword_input = QLineEdit()
        self.keyword_input.setPlaceholderText("Í∞ïÏïÑÏßÄÏÇ¨Î£å,Ïò§Î∏êÎ≤†Ïù¥ÌÅ¨ÏÇ¨Î£å,ÌÑ∞ÌÇ§Ï∏Ñ (Ïó¨Îü¨Í∞ú ÏûÖÎ†•Ïãú , ÏâºÌëúÎ°ú Íµ¨Î∂Ñ)")
        self.keyword_input.setMinimumHeight(line_h)
        self.keyword_input.setTextMargins(8, 4, 8, 4)
        grid_layout.addWidget(keyword_label, 1, 0)
        grid_layout.addWidget(self.keyword_input, 1, 1)
        
        # Ïπ¥ÌÖåÍ≥†Î¶¨ (2,0)
        category_label = QLabel("Ïπ¥ÌÖåÍ≥†Î¶¨:")
        self.keyword_category_display = QLineEdit("")
        self.keyword_category_display.setPlaceholderText("Î∂ÑÏÑù ÌõÑ ÏûêÎèô ÌëúÏãú")
        self.keyword_category_display.setReadOnly(True)
        self.keyword_category_display.setMinimumHeight(line_h)
        self.keyword_category_display.setTextMargins(8, 4, 8, 4)
        self.keyword_category_display.setObjectName("category_display")
        grid_layout.addWidget(category_label, 2, 0)
        grid_layout.addWidget(self.keyword_category_display, 2, 1)
        
        # Ïò§Î•∏Ï™Ω Ïó¥
        # Ïû¨Ïßà/ÏõêÏû¨Î£å (0,2)
        material_label = QLabel("Ïû¨Ïßà/ÏõêÏû¨Î£å (ÏÑ†ÌÉù):")
        self.material_input = QLineEdit()
        self.material_input.setPlaceholderText("Ïòà: Ïπ†Î©¥Ï°∞ÌûòÏ§Ñ, ÏÜåÍ≥†Í∏∞, Ïñë")
        self.material_input.setMinimumHeight(line_h)
        self.material_input.setTextMargins(8, 4, 8, 4)
        grid_layout.addWidget(material_label, 0, 2)
        grid_layout.addWidget(self.material_input, 0, 3)
        
        # ÏÇ¨Ïù¥Ï¶à (1,2)
        size_label = QLabel("ÏÇ¨Ïù¥Ï¶à (ÏÑ†ÌÉù):")
        self.size_input = QLineEdit()
        self.size_input.setPlaceholderText("Ïòà: S, M, L")
        self.size_input.setMinimumHeight(line_h)
        self.size_input.setTextMargins(8, 4, 8, 4)
        grid_layout.addWidget(size_label, 1, 2)
        grid_layout.addWidget(self.size_input, 1, 3)
        
        # ÏàòÎüâ/Íµ¨ÏÑ± (2,2)
        quantity_label = QLabel("ÏàòÎüâ/Íµ¨ÏÑ± (ÏÑ†ÌÉù):")
        self.spec_input = QLineEdit()
        self.spec_input.setPlaceholderText("Ïòà: 20Í∞ú, 300g, 20g 10Í∞ú")
        self.spec_input.setMinimumHeight(line_h)
        self.spec_input.setTextMargins(8, 4, 8, 4)
        grid_layout.addWidget(quantity_label, 2, 2)
        grid_layout.addWidget(self.spec_input, 2, 3)
        
        main_layout.addLayout(grid_layout)
        
        # Î≤ÑÌäº ÏòÅÏó≠ (Ïò§Î•∏Ï™Ω Ï†ïÎ†¨)
        button_layout = QHBoxLayout()
        button_layout.addStretch()  # ÏôºÏ™Ω Í≥µÍ∞Ñ Ï±ÑÏö∞Í∏∞
        
        # ÏÉÅÌíà Î∂ÑÏÑù ÏãúÏûë Î≤ÑÌäº (Í≥µÏö© Ïª¥Ìè¨ÎÑåÌä∏)
        self.analyze_button = ModernPrimaryButton("üîç ÏÉÅÌíàÎ∂ÑÏÑùÏãúÏûë")
        self.analyze_button.setMinimumHeight(40)
        self.analyze_button.setMinimumWidth(130)
        button_layout.addWidget(self.analyze_button)
        
        # Î∂ÑÏÑù Ï†ïÏßÄ Î≤ÑÌäº (Í≥µÏö© Ïª¥Ìè¨ÎÑåÌä∏)
        self.stop_button = ModernCancelButton("‚èπÔ∏è Ï†ïÏßÄ")
        self.stop_button.setEnabled(False)  # Ï≤òÏùåÏóî ÎπÑÌôúÏÑ±Ìôî
        self.stop_button.setMinimumHeight(40)
        self.stop_button.setMinimumWidth(130)
        button_layout.addWidget(self.stop_button)
        
        main_layout.addLayout(button_layout)
        
        group.setLayout(main_layout)
        
        # SizePolicy ÏÑ§Ï†ï
        group.setSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        group.setObjectName("input_group")
        
        # Ïä§ÌÉÄÏùº Ï†ÅÏö©
        self.apply_input_styles()
        
        return group
        
    def setup_connections(self):
        """ÏãúÍ∑∏ÎÑê Ïó∞Í≤∞"""
        self.analyze_button.clicked.connect(self.on_analyze_clicked)
        self.stop_button.clicked.connect(self.stop_requested.emit)
        
    def on_analyze_clicked(self):
        """Î∂ÑÏÑù Î≤ÑÌäº ÌÅ¥Î¶≠ Ï≤òÎ¶¨"""
        # ÏûÖÎ†•Í∞í ÏàòÏßë
        input_data = {
            'brand': self.brand_input.text().strip(),
            'keyword': self.keyword_input.text().strip(),
            'spec': self.spec_input.text().strip(),
            'material': self.material_input.text().strip(),
            'size': self.size_input.text().strip()
        }
        
        # ÌïÑÏàò ÌïÑÎìú Í≤ÄÏ¶ù (ÌïµÏã¨Ï†úÌíàÎ™ÖÎßå ÌïÑÏàò)
        if not input_data['keyword']:
            log_manager.add_log("‚ùå ÌïµÏã¨Ï†úÌíàÎ™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. (Ïó¨Îü¨Í∞ú ÏûÖÎ†•Ïãú ÏâºÌëúÎ°ú Íµ¨Î∂Ñ)", "error")
            return
            
        # Î∂ÑÏÑù ÏöîÏ≤≠ ÏãúÍ∑∏ÎÑê Î∞úÏÉù
        self.analyze_requested.emit(input_data)
        
    def set_analysis_mode(self, analyzing: bool):
        """Î∂ÑÏÑù Î™®Îìú ÏÑ§Ï†ï"""
        self.analyze_button.setEnabled(not analyzing)
        self.stop_button.setEnabled(analyzing)
        
        if analyzing:
            self.keyword_category_display.setText("Î∂ÑÏÑù Ï§ë...")
        
    def set_compact_mode(self, compact: bool):
        """Ïª¥Ìå©Ìä∏ Î™®Îìú ÏÑ§Ï†ï"""
        if compact:
            # Îçî ÏûëÍ≤å ÎßåÎì§Í∏∞
            for w in (self.brand_input, self.keyword_input, self.spec_input, 
                     self.material_input, self.size_input):
                w.setMinimumHeight(24)
        else:
            # ÏõêÎûò ÌÅ¨Í∏∞Î°ú Î≥µÏõê
            fm = QFontMetrics(self.font())
            line_h = max(28, fm.height() + 8)
            for w in (self.brand_input, self.keyword_input, self.spec_input,
                     self.material_input, self.size_input):
                w.setMinimumHeight(line_h)
                
    def update_category_display(self, category: str):
        """Ïπ¥ÌÖåÍ≥†Î¶¨ ÌëúÏãú ÏóÖÎç∞Ïù¥Ìä∏"""
        if category and category.strip() and category != "ÎØ∏Î∂ÑÎ•ò(0%)":
            self.keyword_category_display.setText(category)
        else:
            self.keyword_category_display.setText("Î∂ÑÏÑù Ï§ë...")
        
    def get_input_data(self) -> InputData:
        """ÌòÑÏû¨ ÏûÖÎ†• Îç∞Ïù¥ÌÑ∞ Î∞òÌôò"""
        return InputData(
            brand=self.brand_input.text().strip(),
            keyword=self.keyword_input.text().strip(),
            spec=self.spec_input.text().strip(),
            material=self.material_input.text().strip(),
            size=self.size_input.text().strip()
        )
        
    def apply_input_styles(self):
        """ÏûÖÎ†• ÏÑπÏÖò Ïä§ÌÉÄÏùº Ï†ÅÏö©"""
        self.setStyleSheet(f"""
            QGroupBox {{
                font-size: 16px;
                font-weight: 600;
                border: 2px solid {ModernStyle.COLORS['border']};
                border-radius: 10px;
                margin: 15px 0;
                padding-top: 18px;
                background-color: {ModernStyle.COLORS['bg_card']};
            }}
            QGroupBox::title {{
                subcontrol-origin: margin;
                left: 15px;
                padding: 0 10px;
                background-color: {ModernStyle.COLORS['bg_card']};
                color: {ModernStyle.COLORS['text_primary']};
                top: 0px;
            }}
            QLineEdit {{
                padding: 6px 10px;
                border: 2px solid {ModernStyle.COLORS['border']};
                border-radius: 8px;
                font-size: 13px;
                background-color: {ModernStyle.COLORS['bg_input']};
                min-height: 20px;
            }}
            QLineEdit:focus {{
                border-color: {ModernStyle.COLORS['primary']};
            }}
            QLineEdit#category_display {{
                background-color: {ModernStyle.COLORS['bg_secondary']};
                color: {ModernStyle.COLORS['text_muted']};
                border: 2px solid {ModernStyle.COLORS['border']};
            }}
            QLabel {{
                font-size: 14px;
                color: {ModernStyle.COLORS['text_primary']};
                font-weight: 500;
            }}
            QGroupBox#input_group {{
                padding-top: 16px;
                margin: 6px 0;
            }}
            QGroupBox#input_group QLineEdit {{
                min-height: 18px;
                padding: 4px 8px;
            }}
        """)